# Global definitions for SELinux
%global selinux_types %(%{__awk} '/^#[[:space:]]*SELINUXTYPE=/,/^[^#]/ { if ($3 == "-") printf "%s ", $2 }' %{_sysconfdir}/selinux/config 2>/dev/null)
%global selinux_variants %([ -z "%{selinux_types}" ] && echo mls targeted || echo %{selinux_types})

# Definitions
%define debug_package %{nil}
%if %{_vendor} == suse
%define webroot %{_prefix}/srv/sipcapture/htdocs
%else # CentOS/Fedora
%define webroot %{_localstatedir}/www/sipcapture/htdocs
%define webuser apache
%define webgroup apache
%endif

Name:           @PACKAGE_NAME@
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_REVISION@
Summary:        HTTP based API for HOMER

Group:          Telecommunications
License:        GPLv3
URL:            @PACKAGE_URL@
Source0:        %name-%version.tar.gz

Requires:       kamailio >= 4.3, kamailio-mysql >= 4.3
Requires:       ntp
Requires:       php >= 5
Requires:       php-mysql
Requires:	perl-DBD-MySQL
Requires:       mysql-community-server >= 5.5
Requires:       mysql-community-client >= 5.5

%description
HTTP based API for HOMER is a robust, carrier-grade, scalable SIP Capture system and Monitoring Application with HEP/HEP2, IP Proto4 (IPIP) encapsulation & port mirroring/monitoring support right out of the box, ready to process & store insane amounts of signaling with instant search, end-to-end analysis and drill-down capabilities for ITSPs, VoIP Providers and Trunk Suppliers using SIP signaling

%package httpd
Requires:       %name = %version
Requires:       httpd
Summary:        httpd config for HTTP based API for HOMER

%description httpd
HOMER API httpd configuration

%package nginx
Requires:       %name = %version
Requires:       nginx, php-fpm
Summary:        nginx config for HTTP based API for HOMER

%description nginx
HOMER API nginx configuration

%files
%defattr(0660,%{webuser},%{webgroup})
%dir %attr(2770,%{webuser},%{webgroup}) %{webroot}
%dir %{webroot}/api
%dir %{_localstatedir}/lib/sipcapture/mysql
%{webroot}/api/*
%{webroot}/apidoc/*
%{_datadir}/sipcapture/sql/*
%{_sysconfdir}/my.cnf.d/sipcapture.cnf
%attr(0664,root,root)%{_sysconfdir}/kamailio/kamailio-sipcapture.cfg
%attr(0664,root,root)%{_sysconfdir}/sysconfig/sipcapture
%attr(0664,root,root)/usr/lib/systemd/system/sipcapture.service
%attr(0664,root,root)%{_sysconfdir}/rsyslog.d/sipcapture.conf
%attr(0664,root,root)%{_sysconfdir}/logrotate.d/sipcapture.conf
%attr(0664,root,root)%{_sysconfdir}/cron.d/sipcapture
%attr(0775,root,root)%{_bindir}/homer_rotate
%attr(0775,root,root)%{_bindir}/homer_mysql_new_table.pl
%attr(0775,root,root)%{_bindir}/homer_mysql_partrotate_unixtimestamp.pl

%files httpd
%{webroot}/api/.htaccess
%{_sysconfdir}/httpd/conf.d/sipcapture.conf

%files nginx
%{_sysconfdir}/nginx/conf.d/sipcapture.conf
%{_sysconfdir}/php-fpm.d/sipcapture.conf
%{_datadir}/selinux/*/*.pp

%prep
%setup -b0 -q

%build
%configure --enable-rpmbuilb
make

%install
rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install

# SELinux
for selinuxvariant in %{selinux_variants}
do
	install -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}
	if [ -f examples/web/nginx.pp.${selinuxvariant} ]; then install -p -m 644 examples/web/nginx.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/nginx.pp; fi;
	if [ -f examples/web/php-fpm.pp.${selinuxvariant} ]; then install -p -m 644 examples/web/php-fpm.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/php-fpm.pp; fi;
        if [ -f examples/web/php.pp.${selinuxvariant} ]; then install -p -m 644 examples/web/php.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/php.pp; fi;
	if [ -f examples/web/httpd.pp.${selinuxvariant} ]; then install -p -m 644 examples/web/httpd.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/httpd.pp; fi;
done

# Configuration templates
# kamailio configuration
%{__mkdir} -p %{buildroot}%{_sysconfdir}/kamailio
%{__mkdir} -p %{buildroot}%{_sysconfdir}/rsyslog.d
%{__mkdir} -p %{buildroot}%{_sysconfdir}/logrotate.d
%{__mkdir} -p %{buildroot}%{_sysconfdir}/sysconfig
%{__mkdir} -p %{buildroot}/usr/lib/systemd/system
%{__cp} examples/sipcapture/kamailio.cfg %{buildroot}%{_sysconfdir}/kamailio/kamailio-sipcapture.cfg
%{__cp} examples/sipcapture/el%{rhel}/sipcapture.sysconfig %{buildroot}%{_sysconfdir}/sysconfig/sipcapture
%{__cp} examples/sipcapture/el%{rhel}/sipcapture.service %{buildroot}/usr/lib/systemd/system/sipcapture.service
%{__cp} examples/sipcapture/sipcapture.rsyslogd %{buildroot}%{_sysconfdir}/rsyslog.d/sipcapture.conf
%{__cp} examples/sipcapture/sipcapture.logrotated %{buildroot}%{_sysconfdir}/logrotate.d/sipcapture.conf
# HTTP servers confgiuration
%{__mkdir} -p %{buildroot}%{_sysconfdir}/httpd/conf.d
%{__mkdir} -p %{buildroot}%{_sysconfdir}/nginx/conf.d
%{__mkdir} -p %{buildroot}%{_sysconfdir}/php-fpm.d
%{__cp} examples/web/homer5.apache %{buildroot}%{_sysconfdir}/httpd/conf.d/sipcapture.conf
%{__cp} examples/web/homer5.nginx %{buildroot}%{_sysconfdir}/nginx/conf.d/sipcapture.conf
%{__cp} examples/web/homer5.php-fpm %{buildroot}%{_sysconfdir}/php-fpm.d/sipcapture.conf
# MySQL configuration
%{__mkdir} -p %{buildroot}%{_datadir}/sipcapture/sql/
%{__mkdir} -p %{buildroot}%{_localstatedir}/lib/sipcapture/mysql
%{__cp} sql/* %{buildroot}%{_datadir}/sipcapture/sql/

# UI and API directories and files
%{__mkdir} -p %{buildroot}%{webroot}
%{__mkdir} -p %{buildroot}%{webroot}/api
%{__cp} -r api/Authentication %{buildroot}%{webroot}/api
%{__cp} -r api/Database %{buildroot}%{webroot}/api
%{__cp} -r api/RestApi %{buildroot}%{webroot}/api
%{__cp} -r api/RestService %{buildroot}%{webroot}/api
%{__cp} -r api/Statistic %{buildroot}%{webroot}/api
%{__cp} -r api/*.php %{buildroot}%{webroot}/api
%{__cp} -r api/.htaccess %{buildroot}%{webroot}/api

%{__mkdir} -p %{buildroot}%{_sysconfdir}/my.cnf.d
%{__mkdir} -p %{buildroot}%{_sysconfdir}/cron.d
%{__mkdir} -p %{buildroot}%{_sysconfdir}/sysconfig
%{__mkdir} -p %{buildroot}%{_bindir}
%{__cp} -f examples/mysql/sipcapture.cnf %{buildroot}%{_sysconfdir}/my.cnf.d/sipcapture.cnf
%{__cp} -f scripts/sipcapture.crontab %{buildroot}%{_sysconfdir}/cron.d/sipcapture
%{__cp} -f scripts/homer_rotate %{buildroot}%{_bindir}/homer_rotate
%{__cp} -f scripts/homer_mysql_new_table.pl %{buildroot}%{_bindir}/homer_mysql_new_table.pl
%{__cp} -f scripts/homer_mysql_partrotate_unixtimestamp.pl %{buildroot}%{_bindir}/homer_mysql_partrotate_unixtimestamp.pl

%post
/bin/echo "Initializing local MySQL server data directory in standard location"
/bin/echo "MYSQLD_OPTS=\"--explicit_defaults_for_timestamp\"" > %{_sysconfdir}/sysconfig/mysql
/sbin/mysqld --initialize-insecure --user=mysql
/usr/bin/mv /var/log/mysqld.log /root/mysqld.initialize
if [ -e /bin/systemctl ]; then /bin/echo "Reloading systemctl"; /bin/systemctl daemon-reload; fi
/bin/echo "Starting local MySQL server"
/sbin/service mysqld start
/bin/echo "Stopping local MySQL server"
/sbin/service mysqld stop
/bin/echo "Initializing local MySQL server data directory in standard location(again)"
/bin/rm -rf /var/lib/mysql/*
/sbin/mysqld --initialize-insecure --user=mysql
/bin/echo "Starting local MySQL server(again)"
/sbin/service mysqld start || (/usr/bin/mv /var/log/mysqld.log /root/mysqld.start ; exit 1) && (/bin/echo "Installing MySQL schemas to local MySQL server" ; /bin/mysql -u root --skip-password -h localhost --skip-password -e "CREATE USER 'homer_user'@'localhost' IDENTIFIED BY 'homer_password'"; for DB in data configuration statistic; do /bin/mysql -u root -h localhost --skip-password -e "create database homer_$DB" &&  /bin/mysql -u root --skip-password -h localhost --skip-password -D homer_$DB < %{_datadir}/sipcapture/sql/schema_$DB.sql; /bin/mysql -u root --skip-password -h localhost --skip-password -e "GRANT ALL ON homer_$DB.* TO 'homer_user'@'localhost';"; done; /bin/echo "Running rotate script to actualize DB tables"; %{_bindir}/homer_rotate );
/bin/echo "Enable MySQL server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable mysqld; else /sbin/chkconfig mysqld on; fi
/bin/echo "Enable Kamailio server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable sipcapture; else /sbin/chkconfig sipcapture on; fi
/sbin/service sipcapture start

%post httpd
/bin/chown -R %{webuser}:%{webgroup} %{webroot}
/bin/echo "Enable HTTP server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable httpd; else /sbin/chkconfig httpd on; fi
/bin/echo "Starting local HTTP server"
/sbin/service httpd start

%post nginx
/bin/echo "installing SELinux policies"
for selinuxvariant in %{selinux_variants}
do
	/usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/nginx.pp &> /dev/null || :
	/usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/php-fpm.pp &> /dev/null || :
        /usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/php.pp &> /dev/null || :
        /usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/httpd.pp &> /dev/null || :
done
/sbin/fixfiles -R sipcapture restore || :
/sbin/restorecon -R %{_localstatedir}/cache/sipcapture || :

HOSTNAME=`/bin/hostname`
/bin/echo "Virtual HTTP host set to : $HOSTNAME"
/bin/sed -i "s/<HOSTNAME>/$HOSTNAME/g" %{_sysconfdir}/nginx/conf.d/sipcapture.conf 
/bin/chown -R nginx:nginx %{webroot}
/bin/echo "Enable HTTP server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable nginx; else /sbin/chkconfig nginx on; fi
if [ -e /bin/systemctl ]; then /bin/systemctl enable php-fpm; else /sbin/chkconfig php-fpm on; fi
/bin/echo "Starting local HTTP server"
/sbin/service nginx start
/sbin/service php-fpm start

%postun nginx
if [ $1 -eq 0 ] ; then
  for selinuxvariant in %{selinux_variants}
  do
    /usr/sbin/semodule -s ${selinuxvariant} -r mymodule &> /dev/null || :
  done
  /sbin/fixfiles -R sipcapture| :
  [ -d %{_localstatedir}/cache/sipcapture
    /sbin/restorecon -R %{_localstatedir}/cache/sipcapture &> /dev/null || :
fi

%preun

%postun
/usr/bin/rm -f %{_sysconfdir}/sysconfig/mysql

%clean
rm -rf $RPM_BUILD_ROOT
